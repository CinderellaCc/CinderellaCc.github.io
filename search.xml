<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何使用vscode调试远程代码（通过跳板机登录、终端使用）</title>
      <link href="/2023/07/05/connect-to-remote-machine-through-vscode/"/>
      <url>/2023/07/05/connect-to-remote-machine-through-vscode/</url>
      
        <content type="html"><![CDATA[<p>本教程将教会你使用vscode连接远程服务器（包括需要跳板机连接的远程服务器）进行代码调试、终端使用等。</p><p>这个方法已经被安利给组内的小伙伴了，他们都赞不绝口（不夸张），像是打开了新世界的大门！！！开发效率蹭蹭蹭！</p><h1 id="在本地安装VSCode软件"><a href="#在本地安装VSCode软件" class="headerlink" title="在本地安装VSCode软件"></a>在本地安装VSCode软件</h1><pre><code>略</code></pre><h1 id="在VSCode中连接远程服务器"><a href="#在VSCode中连接远程服务器" class="headerlink" title="在VSCode中连接远程服务器"></a>在VSCode中连接远程服务器</h1><ol><li><p>在VSCode中安装SSH插件。在插件安装处搜索“SSH”，选择下载量最高的SSH插件安装即可 </p></li><li><p>点击vscode左边栏“远程资源管理器”，配置本地~&#x2F;.ssh&#x2F;config文件<br><img src="/images/connect-to-remote-machine-through-vscode/snapshot1.png" alt="config文件截图"><br>在config文件中输入以下内容（修改机器ip、账户名称、本地私钥位置）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Read more about SSH config files: https://linux.die.net/man/5/ssh_config</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">跳板机115</span></span><br><span class="line">Host go115 # 跳板机名称</span><br><span class="line">    HostName 10.18.75.115</span><br><span class="line">    Port 22</span><br><span class="line">    User root</span><br><span class="line">    IdentityFile C:\Users\chengchen219429\.ssh\id_rsa # 本地私钥位置</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">目的机247</span></span><br><span class="line">Host go247 # 目的机名称</span><br><span class="line">    HostName 10.23.162.14</span><br><span class="line">    User root</span><br><span class="line">    ProxyCommand C:\Windows\System32\OpenSSH\ssh.exe -W %h:%p go115 # 这里注明跳板机名称</span><br></pre></td></tr></table></figure></li><li><p>将本地ssh公钥上传至跳板机和目的机，方法如下<br>找到本地.ssh文件夹（默认在用户目录下，如C:\Users\XXX.ssh），打开公钥id_rsa.pub，复制。注：如果本地没有公私钥文件，可以手动生成，在cmd中输入<code>ssh-keygen -t rsa -C &quot;your email address&quot;</code></p></li><li><p>登录跳板机和目的机，将复制的公钥拷贝至~&#x2F;.ssh&#x2F;authorized_keys文件最后一行，保存</p></li><li><p>登录远程服务器~<br><img src="/images/connect-to-remote-machine-through-vscode/snapshot2.png" alt="config文件截图"></p></li></ol><h1 id="使用远程服务器进行调试"><a href="#使用远程服务器进行调试" class="headerlink" title="使用远程服务器进行调试"></a>使用远程服务器进行调试</h1><ol><li>调试配置：点击vscode左侧“运行和调试”按钮，编写launch.json文件，在“python”字段输入python解释器路径，其他保持不变，保存文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 使用 IntelliSense 了解相关属性。 </span><br><span class="line">    // 悬停以查看现有属性的描述。</span><br><span class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Python: 当前文件&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;python&quot;,</span><br><span class="line">            &quot;python&quot;: &quot;/data/chencheng/anaconda3/envs/comment_env/bin/python3.8&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;file&#125;&quot;,</span><br><span class="line">            &quot;console&quot;: &quot;integratedTerminal&quot;,</span><br><span class="line">            &quot;justMyCode&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>开始调试：编写一个调试测试py文件，打上断点，即可开始愉快的debug啦</li></ol><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="文件传输功能"><a href="#文件传输功能" class="headerlink" title="文件传输功能"></a>文件传输功能</h2><p>使用vscode连接服务器后可以直接上传下载文件，非常方便</p><h2 id="设置vscode终端每次打开都以最大化显示"><a href="#设置vscode终端每次打开都以最大化显示" class="headerlink" title="设置vscode终端每次打开都以最大化显示"></a>设置vscode终端每次打开都以最大化显示</h2><p>点击“文件”-“首选项”，搜索“Panel: Opens Maximized”，设置为“always”</p><h2 id="设置vscode不显示隐藏文件（命名以’-’开头的文件或文件夹）"><a href="#设置vscode不显示隐藏文件（命名以’-’开头的文件或文件夹）" class="headerlink" title="设置vscode不显示隐藏文件（命名以’.’开头的文件或文件夹）"></a>设置vscode不显示隐藏文件（命名以’.’开头的文件或文件夹）</h2><p>按下快捷键：ctrl+shift+P，在输入框中输入settings回车，进入User Settings页面搜索files.exclude，没有的话则手动添加。false为显示，true为隐藏。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;files.exclude&quot;: &#123;</span><br><span class="line">        // &quot;**/.git&quot;: false,</span><br><span class="line">        // &quot;**/.svn&quot;: false,</span><br><span class="line">        // &quot;**/.hg&quot;: false,</span><br><span class="line">        // &quot;**/CVS&quot;: false,</span><br><span class="line">        // &quot;**/.DS_Store&quot;: false,</span><br><span class="line">        // &quot;**/Thumbs.db&quot;: false,</span><br><span class="line">        // &quot;**/.local&quot;:false,</span><br><span class="line">        &quot;**/.*&quot;: true</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="无法连接远程服务器的原因"><a href="#无法连接远程服务器的原因" class="headerlink" title="无法连接远程服务器的原因"></a>无法连接远程服务器的原因</h2><p>以下可能的解决方法<br>用root登录远程主机，修改vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config文件的字段，改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PasswordAuthentication yes</span><br><span class="line">ChallengeResponseAuthentication no</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br><span class="line">systemctl status sshd.service #查看ssh服务的状态</span><br></pre></td></tr></table></figure><h2 id="vscode设置自动保存（很重要）"><a href="#vscode设置自动保存（很重要）" class="headerlink" title="vscode设置自动保存（很重要）"></a>vscode设置自动保存（很重要）</h2><p>快捷键<code>ctrl+，</code>打开设置，搜索<code>auto save</code>，按下图设置<br><img src="/images/connect-to-remote-machine-through-vscode/snapshot3.png" alt="config文件截图"></p><p>参考资料：</p><ul><li><a href="https://blog.csdn.net/baidu_41553551/article/details/128505159">vscode使用跳板机（密钥）进入内网并连接内网中其它机器（密码）</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建你的个人博客（Github+hexo+butterfly）</title>
      <link href="/2023/06/28/build-your-own-blog-website-from-scratch/"/>
      <url>/2023/06/28/build-your-own-blog-website-from-scratch/</url>
      
        <content type="html"><![CDATA[<p>激动之情无以言表，我居然自己成功搭建了属于自己的博客；从零开始，一点点查资料，耗时3天左右，整个过程跌跌绊绊，最终达到了预想的结果，实在太有成就感了！</p><p>事情是这样的，我在与一个校友接触的过程中，通过他分享的经验帖进到了他的<a href="https://youngforest.github.io/2016/08/25/my-britain-trip/">博客网站</a>，里面有好多干货，既包含技术层面，也包含了一些生活记录；那个校友用博客来记录年终总结和制订年度计划，太赞了！没想到用博客来做记录居然是一件这么有意思的事！那我也要搭建自己的博客网页！</p><p>不废话了，这篇博客主要记录从零开始搭建个人博客网站的<strong>核心步骤</strong>。正文开始~~~</p><p><strong>技术关键词</strong></p><ul><li>Github</li><li>Hexo</li><li>butterfly</li></ul><h1 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h1><p>关键词： Git、Node.js、npm、Hexo  </p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>去<a href="https://git-scm.com/download/">Git官网</a>下载所需版本，一直点下一步安装。</p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>去<a href="https://nodejs.org/en/download">node.js官网</a>下载符合自己系统的版本，傻瓜式安装，一直点下一步即可。node.js自带npm。命令行中输入<code>node -v</code>验证是否安装成功。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>命令行中输入<code>npm install -g hexo-cli</code>。输入<code>hexo -v</code>验证是否安装成功</p><h1 id="创建本地开发目录"><a href="#创建本地开发目录" class="headerlink" title="创建本地开发目录"></a>创建本地开发目录</h1><p>创建一个博客项目文件夹，在该路径下用<code>Git bash</code>打开；输入<code>npm i</code>安装依赖；输入<code>hexo init blog-demo(项目名)</code>生成我们的Hexo项目，生成后会出现如下文件：  </p><blockquote><p>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【_config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p></blockquote><p>至此，我们的博客已经搭好啦！</p><p>什么！！你在跟我开玩笑吗？？</p><p>没错，我们的博客雏形到这里已经完成了，我们可以运行本地博客项目查看我们的初版博客了；此后就是在此基础上<strong>美化博客网站</strong>、<strong>写博客</strong>、<strong>部署到互联网上</strong>。</p><p>在Git bash中继续依次输入<code>hexo clean</code> &amp; <code>hexo g</code> &amp; <code>hexo s</code>运行服务，在浏览器打开即可~</p><h1 id="美化网站"><a href="#美化网站" class="headerlink" title="美化网站"></a>美化网站</h1><p>初始的博客实在太丑，Hexo提供了大量的模板用来美化我们的网页，可以去hexo官网找一个喜欢的风格模板。本博客网站采用了butterfly模板，参考<a href="https://fe32.top/articles/hexo1600/">教程</a>，讲的非常的详细！<br>此处不做赘述，主要是刚开始写博客，肯定没人家解释的清楚~</p><h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1><p>这里写博客用的是Markdown语法。在Git bash中输入<code>hexo new 我的博客名称</code>新建博客，新建的博客可以在<code>./source/_posts/</code>目录下看到，用IDE打开编辑保存即可。</p><p>重新输入<code>hexo clean</code> &amp; <code>hexo g</code> &amp; <code>hexo s</code>运行服务，可以看到博客已经出现在网页上了。</p><h1 id="部署到Github上"><a href="#部署到Github上" class="headerlink" title="部署到Github上"></a>部署到Github上</h1><p>参考<a href="https://fe32.top/articles/hexo1600/">教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 教程</title>
      <link href="/2023/06/28/markdown-tutorial/"/>
      <url>/2023/06/28/markdown-tutorial/</url>
      
        <content type="html"><![CDATA[<p>我发现，Markdown语法不难，但学了好几遍都记不住，原因就是学了却没有去使用它；好在我搭建了自己的博客，后面使用Markdown的机会更多了，相信之后一定会记住的！</p><p>本文不会教你Markdown的语法知识，只作为自检使用；当你能用自己的话回顾完下述知识点时，代表你已经完全掌握Markdown的基本语法啦~</p><p>若不会，请查看教程：<a href="https://blog.csdn.net/weixin_43863919/article/details/124648510">我是教程，点我</a></p><h3 id="请回答以下知识点"><a href="#请回答以下知识点" class="headerlink" title="请回答以下知识点"></a>请回答以下知识点</h3><ol><li>换行</li><li>标题分级</li><li>分割线</li><li>斜体、粗体、删除线</li><li>超链接、自动超链接</li><li>插入图片、带有链接的图片</li><li>无序列表、有序列表、列表嵌套</li><li>文字引用</li><li>行内代码块、代码块</li><li>表格、数学公式</li><li>待办事项、脚注、HTML</li></ol><p>相关资料：<br>    - <a href="https://tableconvert.com/markdown-to-markdown">用Markdown快速制作表格</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年6月18日 - 香港旅行游记</title>
      <link href="/2023/06/28/HongKong-trip/"/>
      <url>/2023/06/28/HongKong-trip/</url>
      
        <content type="html"><![CDATA[<p>今年6月中旬，很早规划的香港之行终于开启了。这次旅行，我们在香港只有三天的时间，因为不想赶在节假日去，人太多，啥都贵。在出发前，我们在网上搜集了很多资料，很多人都说香港人看不起内地人，态度恶劣之类的，所以原本的期待变成了忐忑。</p><p>我们想去看看资本主义到底长啥样，香港真像网上言论般那样动乱吗？</p><p>只能说，真要少在网上冲浪，尤其是看那些带个人主观色彩的言论，虚假的信息泛滥，我们的认知很容易受到这些的影响，网上那些信息很明显是有人刻意为之，故意放大，唯恐天下不乱。</p><p>去了之后才发现，哪里都有好人，也都有坏人，我们对一座城市的印象，对在那里生活的人的看法，不应该被网上的只言片语带风向，对他们产生误解，这对他们是不公平的。</p><p>我们刚落地香港，由于不熟悉繁体字，找不到出口，遇到了非常热心的机场值勤人员；出了机场又有一个小帅哥主动帮我们指路；在公交车上看到了为一个没有零钱的乘客主动支付车费的热心肠举动</p><p>当然</p><p>也看到了在这座极度<strong>繁忙拥挤</strong>的城市下努力求生存的人类，他们的些许冷淡、没有耐心和脾气暴躁，但这都只是少数，是再正常不过的现象了</p><p>当我们去到一个陌生的地方，我们的感官会被放大，我们对事物的误解也会被放大，所以，一定要保持理智，多换位思考。</p><p>这段旅行下来，香港给我的印象是<strong>拥挤、生活节奏快、高消费高工资、多元化</strong>，香港有很多外国人在那里从事各种各样的职业，有机场值勤、建筑工人、外卖小哥，还有非常多的菲佣，这点倒是第一次见。</p>]]></content>
      
      
      <categories>
          
          <category> 游记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 香港 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
